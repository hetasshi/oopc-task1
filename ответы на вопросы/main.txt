Плотников WORD

1.   Основная проблема ООП: Управление сложностью программ через организацию кода в объекты, объединяющие данные и методы.
2.   Инкапсуляция: Скрывает детали реализации, защищая данные от несанкционированного доступа.
3.   Абстракция vs Реализация: Абстракция описывает «что», а реализация — «как».
4.   Преимущества инкапсуляции: Защита данных, упрощение поддержки кода.
5.   АТД: Модель данных, определяющая операции без деталей реализации (например, через классы).
6.   DRY в ООП: Устранение дублирования через наследование и композицию.
7.   Проблемы процедурного подхода: Глобальные данные и сложность повторного использования кода.
8.   Абстрагирование: Упрощает модель, выделяя ключевые аспекты.
9.   Конструктор: Инициализирует объект, задавая начальные значения полей.
10.   Пример абстракции: Класс «Магазин» в картах содержит только адрес, а не детали бизнеса.
11.   Инкапсуляция (пример): Приватные поля с доступом через геттеры/сеттеры.
12.   class vs struct: В class поля по умолчанию приватные, в struct — публичные.
13.   private: Защищает данные от прямого изменения извне.
14.   Сокрытие информации: Ограничение доступа к внутренней реализации (например, приватные поля).
15.   Геттеры/сеттеры: Методы для контролируемого доступа к приватным полям.
16.   const методы: Гарантируют, что метод какой либо не изменяет объект (например, int getX() const).
17.   Константные ссылки: Используются для передачи больших объектов без копирования.
18.   Преимущества константных ссылок: Экономия памяти и защита данных.
19.   const методы: Используются, когда метод не меняет состояние объекта.
20.   Предварительные объявления: Помогают избежать циклических зависимостей между классами.
